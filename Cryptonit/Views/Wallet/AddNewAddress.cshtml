

<div class="container">
    <h4>Add new Contact</h4>
    @if (ViewBag.Message == "success")
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Contact created.</strong>
        </div>
    }
    <div class="input-group-prepend">
        <form action="/Wallet/AddNewAddress" method="post">
            <div class="form-group">
                <label class="control-label">Contact Name</label>
                <input type="text" class="form-control" name="ContactName" />
                <label class="control-label ">Contact Address</label>
                <input type="text" class="form-control" name="ContactAddress" />
                <label class="control-label">Currency</label>
                <select name="Currency" class="custom-select">
                    @{ using (Cryptonit.Models.Entities db = new Cryptonit.Models.Entities())
                        {
                            var currency = db.Currency.ToList();
                            foreach (Cryptonit.Models.Currency c in currency)
                            {
                                <option name='@c.Id'>@c.Name</option>
}
};
                    }

                </select>
                <br>
                <input type="submit" value="Add Contact" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>
    @*@using (html.beginform())
        {
            @html.antiforgerytoken()

        <div class="form-horizontal">
            <h4>usercontact</h4>
            <hr />
            @html.validationsummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @html.labelfor(model => model.contactname, htmlattributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @html.editorfor(model => model.contactname, new { htmlattributes = new { @class = "form-control" } })
                    @html.validationmessagefor(model => model.contactname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @html.labelfor(model => model.contactaddress, htmlattributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @html.editorfor(model => model.contactaddress, new { htmlattributes = new { @class = "form-control" } })
                    @html.validationmessagefor(model => model.contactaddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @html.labelfor(model => model.contactaddress, htmlattributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @html.editorfor(model => model.currencyid, new { htmlattributes = new {
               } })
                    @html.validationmessagefor(model => model.contactaddress, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="create" class="btn btn-default" />
                </div>
            </div>
        </div>
        }*@
